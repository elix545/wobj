SUBROUTINE WOBJ.PARSEARRAY(JSTR,INDEXPOS,PARSEARRAY)
INCLUDE WOBJ.INCLUDE
*
PARSEVARRAY=""
IF WOBJ.DEBUG THEN PRINT "PARSEARRAY - STARTING"
*
CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)
*
IF JSTR[INDEXPOS,1] <> "[" THEN
	PSERRORS<-1>="Invalid Array at position ":INDEXPOS:" : ":JSTR[INDEXPOS,20]
	RETURN
END
*
LEN.JSTR = LEN(JSTR)
INDEXPOS+=1
*
JSONOBJECT(JSONOBJECT$NODECNTR)+=1
NODEID=JSONOBJECT(JSONOBJECT$NODECNTR)
JSONOBJECT(JSONOBJECT$NODETYPE)<1,NODEID>="A"; *SET AS OBJECT
*
LOOP
	CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)
	C=JSTR[INDEXPOS,1]
	IF WOBJ.DEBUG THEN PRINT "PARSEARRAY: ":NODEID:" - LOOKING AT ":C
	BEGIN CASE
		CASE C = "]"
			IF WOBJ.DEBUG THEN PRINT "PARSEARRAY: ":NODEID:" EXIT ON ]"
			INDEXPOS+=1
			EXIT
		CASE C = ","
			INDEXPOS+=1
			CALL WOBJ.SKIPCHAR(JSTR,INDEXPOS)
		CASE INDEXPOS > LEN.JSTR
			PSERRORS<-1>="Missing ']': ":JSTR[LEN(JSTR)-20,20]
			RETURN
	END CASE
	*
	CALL WOBJ.PARSEVALUE(JSTR,INDEXPOS,PARSEVALUE)
	*
	JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEID>+=1
    PARTPOS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,NODEID>
    BEGIN CASE
       	CASE PARSEVALUE<1>="A" OR PARSEVALUE<1>="O"
       		* ARRAY
       		JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEID,PARTPOS>=PARSEVALUE<1>
       		JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,NODEID,PARTPOS>=PARSEVALUE<2>
       	CASE 1
       		JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,NODEID,PARTPOS>=PARSEVALUE<1>
       		V=PARSEVALUE<2>
	        IF INDEX(V,CHAR(10),1) OR INDEX(V,CHAR(13),1) THEN
	            V=OCONV(V,"MX")
	            E="H"
	        END ELSE
	            E="A"
	        END
       		JSONOBJECT(JSONOBJECT$NODEPARTS.VALUE)<1,NODEID,PARTPOS>=V
       		JSONOBJECT(JSONOBJECT$NODEPARTS.ENCODING)<1,NODEID,PARTPOS>=E
    END CASE
	*PARSEARRAY<1,-1>=PARSEVALUE
	IF WOBJ.DEBUG THEN PRINT "PARSEARRAY ":NODEID:" ":PARSEVALUE<1>:" ":PARSEVALUE<2>
	*DEBUG
REPEAT
PARSEARRAY="A"
PARSEARRAY<2>=NODEID
IF WOBJ.DEBUG THEN PRINT "PARSEARRAY - EXITING"
RETURN

