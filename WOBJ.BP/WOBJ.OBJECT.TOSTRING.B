SUBROUTINE WOBJ.OBJECT.TOSTRING(JSON,POS)
*
INCLUDE WOBJ.INCLUDE
*
JSON:="{"; * START OUR STRING
INDENT.DEPTH+=1
*IF PRETTIFY THEN JSON:=NL
NUMBER.PARTS=JSONOBJECT(JSONOBJECT$NODELENGTH)<1,POS>
IF WOBJ.DEBUG THEN PRINT "OBJECT.TOSTRING: POS=":POS:" NUMBER.PARTS=":NUMBER.PARTS
*
* OPTION TO SORT THIS
*
*SORTTYPE="NSBASIC"
SORTTYPE=""
BEGIN CASE
	CASE SORTTYPE="NSBASIC"
	    * WE TAKE THE JSONOBJECT$NODEPARTS.KEY AND SORT INDENT
	    KEYS=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,POS>
	    CONVERT @SVM TO @AM IN KEYS
	    SORTED.KEYS=SORT(KEYS)
	    LOCATE "id" IN SORTED.KEYS SETTING ID.POS ELSE ID.POS=0
	    IF ID.POS THEN
	    	SORTED.KEYS=DELETE(SORTED.KEYS,ID.POS)
	    	SORTED.KEYS="id":@AM:SORTED.KEYS
	    END
	CASE 1
		KEYS=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,POS>
		CONVERT @SVM TO @AM IN KEYS
		SORTED.KEYS=KEYS
END CASE
ACTUAL.KEYS=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,POS>
FOR PP=1 TO NUMBER.PARTS
    PART.KEY=SORTED.KEYS<PP>
    LOCATE PART.KEY IN ACTUAL.KEYS<1,1> SETTING P ELSE
       PRINT "COULD NOT LOCATE ":PART.KEY:" IN ":ACTUAL.KEYS; DEBUG
    END
	PART.TYPE=JSONOBJECT(JSONOBJECT$NODEPARTS.TYPE)<1,POS,P>
	PART.KEY=JSONOBJECT(JSONOBJECT$NODEPARTS.KEY)<1,POS,P>
	IF WOBJ.DEBUG THEN PRINT "OBJECT.TOSTRING: POS=":POS:" P=":P:" T=":PART.TYPE:" K=":PART.KEY
	IF PP=1 AND PRETTIFY THEN JSON:=NL
	CALL WOBJ.ENCODE(PART.KEY,OUT.PART.KEY)
	CALL WOBJ.PRETTIFY.INDENT(JSON,POS)
	JSON:='"':OUT.PART.KEY:'": '
	BEGIN CASE
		CASE PART.TYPE="S"
			CALL WOBJ.STRING.TOSTRING(JSON,POS,P)
		CASE PART.TYPE="B"
			CALL WOBJ.BOOLEAN.TOSTRING(JSON,POS,P)
		CASE PART.TYPE="D"
			CALL WOBJ.NUMBER.TOSTRING(JSON,POS,P)
		CASE PART.TYPE="N"
			CALL WOBJ.NULL.TOSTRING(JSON,POS,P)
		CASE PART.TYPE="O"
			PART.FLINK=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,POS,P>
			IF WOBJ.DEBUG THEN PRINT "OBJ FLINK=":PART.FLINK
			CALL WOBJ.OBJECT.TOSTRING(JSON,PART.FLINK)
		CASE PART.TYPE="A"
			PART.FLINK=JSONOBJECT(JSONOBJECT$NODEPARTS.FLINK)<1,POS,P>
			IF WOBJ.DEBUG THEN PRINT "WOBJ.TOSTRING: FL=":PART.FLINK
			CALL WOBJ.ARRAY.TOSTRING(JSON,PART.FLINK)
	END CASE
	IF PP <> NUMBER.PARTS THEN
		JSON:=", "
		IF PRETTIFY THEN JSON:=NL
	END
NEXT PP
*
IF PRETTIFY THEN
	JSON:=NL
	PASS.POS=POS-1
	CALL WOBJ.PRETTIFY.INDENT(JSON,PASS.POS)
END
JSON:="}"
*IF PRETTIFY THEN JSON:=NL
INDENT.DEPTH-=1
RETURN
