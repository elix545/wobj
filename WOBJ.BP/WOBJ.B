SUBROUTINE WOBJ(PASSEDOBJ,ACTION,NODE,VALUE,OPTIONS,RERR)
*
INCLUDE WOBJ.INCLUDE
*
MAT JSONOBJECT = ""
RERR=""
*
WOBJ.DEBUG=OCONV("WOBJ.DEBUG","TMD;X;;2")
IF OCONV(WOBJ.DEBUG[1,1],"MCU") = "Y" OR WOBJ.DEBUG = "1" THEN WOBJ.DEBUG=1 ELSE WOBJ.DEBUG=0
IF WOBJ.DEBUG THEN PRINT "WOBJ.DEBUG=1"
*
IF ACTION="FROMSTRING" THEN
    * THIS EXISTS EARLIER DUE TO MATPARSE BELOW
    CALL WOBJ.PARSE(VALUE,NEWOBJ)
    PASSEDOBJ=NEWOBJ
END
*
MATPARSE JSONOBJECT FROM PASSEDOBJ
*
IF WOBJ.DEBUG THEN PRINT "ACTION=":ACTION
BEGIN CASE
   CASE ACTION="TOSTRING"
        CALL WOBJ.TOSTRING(VALUE)
   CASE ACTION="GET"
      	GOSUB action.get
   CASE ACTION="SET"
        CALL WOBJ.SET(NODE,VALUE,RERR)
   CASE ACTION="DELETE"
      	GOSUB action.delete
   CASE ACTION="LENGTH"
      	GOSUB action.length
   CASE 1
   		VALUE=""
   		RERROR=1
   		RERROR<2>="Invalid action '":ACTION:"'"
END CASE
*
MATBUILD PASSEDOBJ FROM JSONOBJECT
*
RETURN
*
action.get: *
*
CALL WOBJ.FINDNODE(NODE,NODEPOS,NODEVALUE,RERR)
VALUE=NODEVALUE
IF WOBJ.DEBUG THEN PRINT "GET ACTION: ":NODE:" NODEPOS=":NODEPOS:" NODEVALUE=":NODEVALUE:" RERR=":RERR<2>
RETURN
*
action.set: *
RETURN
action.delete: *
RETURN
action.length: *
RETURN

